# profiles 설정
spring:
  profiles:
    active: local # 환경변수 구성셋팅 - 배포시 docker로 설정변경함 "-Dspring.profiles.active=${SPRING_PROFILES_ACTIVE}"
    group:
      local: logging-type-console, logging-level-local
      dev: logging-type-file, logging-level-dev
      stg: logging-type-file, logging-level-stg
      prod: logging-type-file, logging-level-prod
  main:
    allow-bean-definition-overriding: true
  thymeleaf:
    cache: false
    check-template-location: true
    prefix: classpath:/templates/
    suffix: .html
  jwt:
    # secret: 644a53c789e56a87 # extranet 사용중인 키
    secret: 644a53c789e56a87644a53c789e56a87644a53c789e56a87 # extranet 사용중인 키 너무 짧아서 3번붙임
    header: Authorization
    refresh: Authorization-Refresh
    access-expiration: 5400000
    refresh-expiration: 86400000
    # prefix: Bearer
  # MVC 설정 추가
  # mvc:
  #   view:
  #     prefix: /views/
  #     suffix: .jsp

---
# DB 암호화 구성
jasypt:
  encryptor:
    bean: jasyptStringEncryptor
    # password: ${jasyptPassword}
    # iv-generator-classname: org.jasypt.iv.RandomIvGenerator

---
# mybatis 설정
mybatis:
  configuration:
    map-underscore-to-camel-case: true
    default-fetch-size: 100
    default-statement-timeout: 30

---
## Server connections configuration
server:
  tomcat:
    threads:
      max: 200
    max-swallow-size: 2MB
  max-http-request-header-size: 40KB
  forward-headers-strategy: native # remoteAddr를 통해 clientIP를 가져옴

# application:
#   security:
#     jwt:
#       secret-key: 644a53c789e56a87 # extranet 사용중인 키
#       expiration: 86400000
#       refresh-token:
#         expiration: 604800000

# docker-compose -> environment 아래 정의할 경우
# secret-key: ${JWT_SECRET_KEY}
# expiration: ${JWT_SECRET_KEY_EXPIRATION}
# refresh-token:
#   expiration: ${JWT_REFRESH_TOKEN_EXPIRATION}
